import sys

ACTIVE = "ACTIVE"
RRC_CONFIGURED = "RRC_CONFIGURED"

MEASUREMENT_REPORT = "MEASUREMENT_REPORT"
HANDOVER_REQUEST = "HANDOVER_REQUEST"
HANDOVER_RESPONSE = "HANDOVER_RESPONSE"
RRC_RECONFIGURATION = "RRC_RECONFIGURATION"
RANDOM_ACCESS = "RANDOM_ACCESS"
RANDOM_ACCESS_RESPONSE = "RANDOM_ACCESS_RESPONSE"
RRC_RECONFIGURATION_COMPLETE = "RRC_RECONFIGURATION_COMPLETE"
HANDOVER_SUCCESS = "HANDOVER_SUCCESS"
SN_STATUS_TRANSFER = "SN_STATUS_TRANSFER"
HANDOVER_CANCEL = "HANDOVER_CANCEL"
PATH_SWITCH_REQUEST = "PATH_SWITCH_REQUEST"
PATH_SWITCH_REQUEST_ACK = "PATH_SWITCH_REQUEST_ACK"
UE_CONTEXT_RELEASE = "UE_CONTEXT_RELEASE"

PERCENT = 1
NUMBER_CANDIDATE = 3
WINDOW_SIZE = 100
max_access_slots = WINDOW_SIZE
oracle_assignment = False
oracle_simulation = False

SOURCE_DECISION_LONGEST = "SD_LONGEST"
SOURCE_DECISION_EARLIEST = "SD_EARLIEST"
SOURCE_DECISION_RANDOM = "SD_RANDOM"
SOURCE_DECISION_OUR = "SD_OUR"

CANDIDATE_EARLIEST = "C_EARLIEST"
CANDIDATE_RANDOM = "C_RANDOM"
CANDIDATE_OUR = "C_OUR"

SOURCE_SELECTION_LONGEST = "SS_LONGEST"
SOURCE_SELECTION_RANDOM = "SS_RANDOM"
SOURCE_SELECTION_OUR = "SS_OUR"  # not implemented

# sys.argv = ['notebook', SOURCE_DECISION_OUR, CANDIDATE_OUR, SOURCE_SELECTION_RANDOM, '1'] # NOTE THIS WORK IN NOTEBOOK
# Modify this list if you have anything to compare
SOURCE_DECISION_ALG = sys.argv[1]
CANDIDATE_ALG = sys.argv[2]
SOURCE_SELECTION_ALG = sys.argv[3]
max_access_opportunity = int(sys.argv[4])
RESULT_PATH = "./result/" + SOURCE_DECISION_ALG + '|' + CANDIDATE_ALG + '|' + SOURCE_SELECTION_ALG + '|' + str(
    max_access_opportunity) + '.pkl'

UE_HANDOVER_SIGNALLING_COUNT_ON_SOURCE = 2 + NUMBER_CANDIDATE
TARGET_HANDOVER_SUCCESS_SIGNALLING_COUNT_ON_SOURCE = 2
SOURCE_HANDOVER_REQUEST_SIGNALLING_COUNT_ON_CANDIDATE = 3  # Assuming candidate will be target.
